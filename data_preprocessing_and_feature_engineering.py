# -*- coding: utf-8 -*-
"""Data Preprocessing and Feature Engineering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZUNLBnBX9ZIoiN0aNIRj4BxLR5HRHEaD
"""

!pip install scikit-learn
!pip install pandas
!pip install streamlit

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

filepath = '/content/taylor_swift_genius_data.csv'
# Load the dataset
songs_df = pd.read_csv(filepath)

songs_df.head()

"""# Step 1: Data Preprocessing and Feature Engineering"""

import pandas as pd
import string
import nltk
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
from nltk.sentiment import SentimentIntensityAnalyzer
import re

nltk.download('stopwords')
nltk.download('wordnet')
nltk.download('vader_lexicon')


# Initialize NLP tools
stop_words = set(stopwords.words('english'))
lemmatizer = WordNetLemmatizer()
sia = SentimentIntensityAnalyzer()

# Preprocessing function
def preprocess_lyrics(lyrics):
    # Lowercase the lyrics
    lyrics = lyrics.lower()

    # Remove punctuation
    lyrics = lyrics.translate(str.maketrans('', '', string.punctuation))

    # Remove non-alphabetic characters and stopwords
    lyrics = re.sub(r'[^a-z\s]', '', lyrics)
    lyrics = ' '.join([word for word in lyrics.split() if word not in stop_words])

    # Lemmatize the words
    lyrics = ' '.join([lemmatizer.lemmatize(word) for word in lyrics.split()])

    return lyrics

# Apply preprocessing
songs_df['Processed Lyrics'] = songs_df['Lyrics'].apply(preprocess_lyrics)

# Feature Engineering: Add Sentiment Score
def add_sentiment(lyrics):
    sentiment = sia.polarity_scores(lyrics)
    return sentiment['compound']  # Compound score is a general sentiment score

songs_df['Sentiment'] = songs_df['Processed Lyrics'].apply(add_sentiment)

# Feature Engineering: Word Count
songs_df['Word Count'] = songs_df['Processed Lyrics'].apply(lambda x: len(x.split()))

# Save the processed data
songs_df.to_csv('taylor_swift_lyrics_with_features.csv', index=False)

